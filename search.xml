<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hands-On Practice: AWS IoT Device Shadow</title>
      <link href="/en/posts/aws-iot-device-shadow.html"/>
      <url>/en/posts/aws-iot-device-shadow.html</url>
      
        <content type="html"><![CDATA[<h1 id="Intro-What-is-AWS-IoT-Device-Shadow"><a href="#Intro-What-is-AWS-IoT-Device-Shadow" class="headerlink" title="Intro - What is AWS IoT Device Shadow?"></a>Intro - What is AWS IoT Device Shadow?</h1><p>In real world, sometime it is difficult to get the actual device state in real time in such IoT scenarios.</p><p>A device shadow can overcome this challenge, Device Shadow can consider a virtual  virtual representation of a device which managed by the <strong>IoT Things</strong> resource created in AWS IoT Core.</p><blockquote><p>The Shadow document is a JSON or a JavaScript notation doc that is used to store and retrieve the current state information for a device. You can use the shadow to get and set the state of a device over MQTT topics or HTTP REST APIs, regardless of whether the device is connected to the internet.</p></blockquote><h1 id="Shadow-Document"><a href="#Shadow-Document" class="headerlink" title="Shadow Document"></a>Shadow Document</h1><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;desired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;reported&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;delta&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">   <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Refer to the json above, you can check there 3 <strong>state</strong> properties in shadow document.</p><ul><li>desired<ul><li>Apps specify the desired states of device properties by updating the desired object</li></ul></li><li>reported<ul><li>Devices report their current state in the reported object.</li></ul></li><li>delta<ul><li>AWS IoT reports differences between the desired and the reported state in the delta object.</li></ul></li></ul><blockquote><p>You can consider the flow of Shadow a finite state machine, for AWS IoT Core, it will also check if there are delta event, that means there difference between <strong>Desired</strong> and <strong>Reported</strong> states</p></blockquote><p>So how can we update the state of a shadow?  The answer is clear,</p><blockquote><p><strong>By subscribing&#x2F;publishing messages to the certain MQTT topics</strong></p></blockquote><h1 id="Shadow-Topic"><a href="#Shadow-Topic" class="headerlink" title="Shadow Topic"></a>Shadow Topic</h1><table><thead><tr><th>ShadowTopicPrefix value</th><th>Shadow type</th></tr></thead><tbody><tr><td>$aws&#x2F;things&#x2F;<code>thingName</code>&#x2F;shadow</td><td>Unnamed (classic) shadow</td></tr><tr><td>$aws&#x2F;things&#x2F;<code>thingName</code>&#x2F;shadow&#x2F;name&#x2F;shadowName</td><td>Named shadow</td></tr></tbody></table><table><thead><tr><th>Topic</th><th>Client operations allowed</th></tr></thead><tbody><tr><td><code>ShadowTopicPrefix</code>&#x2F;delete</td><td>Publish&#x2F;Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;delete&#x2F;accepted</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;delete&#x2F;rejected</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;get</td><td>Publish&#x2F;Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;get&#x2F;accepted</td><td>Publish&#x2F;Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;get&#x2F;rejected</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;update</td><td>Publish&#x2F;Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;update&#x2F;accepted</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;update&#x2F;rejected</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;update&#x2F;delta</td><td>Subscribe</td></tr><tr><td><code>ShadowTopicPrefix</code>&#x2F;update&#x2F;documents</td><td>Subscribe</td></tr></tbody></table><blockquote><p>For detail explanation about these shadow topics, see the documentation - <a href="https://docs.aws.amazon.com/zh_tw/iot/latest/developerguide/device-shadow-mqtt.html">https://docs.aws.amazon.com/zh_tw/iot/latest/developerguide/device-shadow-mqtt.html</a></p></blockquote><h1 id="The-state-changes-of-Device-Shadow"><a href="#The-state-changes-of-Device-Shadow" class="headerlink" title="The state changes of Device Shadow"></a>The state changes of Device Shadow</h1><p><img src="https://i.imgur.com/l071JEc.png" alt="Imgur"></p><p>Take this picture for example, the update flow is:</p><ol><li>The MQTT client publishes a <code>$aws/things/myLightBulb/shadow/update</code> message to the server. The message carries the desired state <code>&#123;&quot;state&quot;: &#123;&quot;desired&quot;:&#123;&quot;color&quot;:&quot;green&quot;&#125;&#125;&#125;</code></li><li>IoT Server responds with <code>$aws/things/myLightBulb/shadow/accepted</code>, indicating that the update message has been received. At the same time, it publishes <code>$aws/things/myLightBulb/shadow/delta</code> to notify the device to update, and then publishes <code>$aws/things/myLightBulb/shadow/update/document</code> as update record</li><li>After receiving the message, the Device performs the corresponding update operation and publishes a message <code>$aws/things/myLightBulb/shadow/update</code> <code>&#123;&quot;state&quot;&#123;&quot;report&quot;:&#123;&quot;color&quot;:&quot;green&quot;&#125;&#125;&#125;</code> to the IoT Server after completion. Notification updated</li><li>After receiving the post-update message, IoT Server responds with <code>$aws/things/myLightBulb/shadow/accepted</code> to indicate that the update message has been received. Publish another <code>$aws/things/myLightBulb/shadow/update/document</code> as an update record</li></ol><h1 id="Expermient-for-IoT-Shadow"><a href="#Expermient-for-IoT-Shadow" class="headerlink" title="Expermient for IoT Shadow"></a>Expermient for IoT Shadow</h1><h2 id="Device-Setup"><a href="#Device-Setup" class="headerlink" title="Device Setup"></a>Device Setup</h2><p>Since I don’t have any IoT Device currently available, I simulate the device by launching a EC2 instance.</p><ul><li>AMI: <code>Ubuntu 22 LTS</code></li><li>Type: <code>t2.Micro</code></li><li>Subnet: <code>10.1.0.0/24</code></li></ul><p>Then connect to the EC2 instance by using SSH, and run the following command</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install -y python3-pip</span><br><span class="line">mkdir certs/</span><br></pre></td></tr></table></figure><h2 id="Setup-in-AWS-IoT-Core"><a href="#Setup-in-AWS-IoT-Core" class="headerlink" title="Setup in AWS IoT Core"></a>Setup in AWS IoT Core</h2><p>There are 3 things to setup in AWS IoT Core</p><ul><li>Create certificate</li><li>Create IoT Policy and associated with the certificate</li><li>Create Things object and associate with the certificate</li></ul><h3 id="Things"><a href="#Things" class="headerlink" title="Things"></a>Things</h3><p>This is a thing named <code>ESP32</code> for testing purposes, it have associated with the certificate</p><p><img src="https://i.imgur.com/96y4cVz.png" alt="Imgur"></p><h3 id="Certificate"><a href="#Certificate" class="headerlink" title="Certificate"></a>Certificate</h3><p>And this certificate has issued by the Amazon Root CA.</p><p><img src="https://i.imgur.com/Hg9Jzsv.png" alt="Imgur"></p><p>And there are IoT Policy - <code>TestPolicy</code> asccociate with this certificate.</p><p><em>TestPolicy</em></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2012-10-17&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iot:Publish&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/get&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/update&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iot:Receive&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/get/accepted&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/get/rejected&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/update/accepted&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/update/rejected&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topic/$aws/things/THING_NAME/shadow/update/delta&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iot:Subscribe&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topicfilter/$aws/things/THING_NAME/shadow/get/accepted&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:rus-east-1:AWS_ACCOUNT:topicfilter/$aws/things/THING_NAME/shadow/get/rejected&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topicfilter/$aws/things/THING_NAME/shadow/update/accepted&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topicfilter/$aws/things/THING_NAME/shadow/update/rejected&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:iot:us-east-1:AWS_ACCOUNT:topicfilter/$aws/things/THING_NAME/shadow/update/delta&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iot:Connect&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Remember, this policy must have adequate permissions for <code>CONNECT</code>, <code>SUBSCRIBE</code>, <code>Publish</code> and <code>Publish</code><br>to the Shadow topic.</p><p>Once you have setup these stuff, now I need to convey the certificate to the EC2 instance.</p><p><img src="https://i.imgur.com/LKSyMJw.png" alt="Imgur"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -i &lt;SSH KEY&gt; TestDeviceShadow/*    ubuntu@ec2-&lt;EC2 Public Address&gt;.compute-1.amazonaws.com:/home/ubuntu/certs</span><br></pre></td></tr></table></figure><p>Apart from the device certificate, it is necessary to provide the CA certificate in the device.</p><ul><li>Download the CA Cert in the device</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd certs/</span><br><span class="line">curl -o ~/certs/Amazon-root-CA-1.pem \</span><br><span class="line">    https://www.amazontrust.com/repository/AmazonRootCA1.pem </span><br></pre></td></tr></table></figure><p>Now there all credential we need to test the IoT Device Shadows</p><h2 id="Install-the-IoT-Core-Python-Device-SDK"><a href="#Install-the-IoT-Core-Python-Device-SDK" class="headerlink" title="Install the IoT Core Python Device SDK"></a>Install the IoT Core Python Device SDK</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/aws/aws-iot-device-sdk-python-v2.git</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s/__version__ = &#x27;1.0.0-dev&#x27;/__version__ = &#x27;&lt;SDK_VERSION&gt;&#x27;/&quot; \</span><br><span class="line">  aws-iot-device-sdk-python-v2/awsiot/__init__.py</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install ./aws-iot-device-sdk-python-v2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/aws-iot-device-sdk-python-v2/samples</span><br></pre></td></tr></table></figure><h2 id="Execute-the-shadow-py"><a href="#Execute-the-shadow-py" class="headerlink" title="Execute the shadow.py"></a>Execute the shadow.py</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 shadow.py --ca_file ~/certs/Amazon-root-CA-1.pem --cert ~/certs/device.pem.crt --key ~/certs/private.pem.key --endpoint your-iot-endpoint --thing_name your-iot-thing-name</span><br></pre></td></tr></table></figure><blockquote><p>You can derive the iot endpoint by checking the AWS IoT Console<br>Find the <strong>Connect</strong> &gt; <strong>Connect One Device</strong> in the left pane<br>Scroll down and you will see the IoT endpoint</p></blockquote><p><img src="https://i.imgur.com/mDBpV7l.png" alt="Imgur"></p><p>Back to the script, after you execute the <code>shadow.py</code>, you will see the prompt in your terminal</p><p><img src="https://i.imgur.com/necUKaZ.png" alt="Imgur"></p><p>You will need to enter the desired value. So I enter “yellow”.</p><p><img src="https://i.imgur.com/CQOkk83.png" alt="Imgur"></p><p>Then you can observe that the state changed to “yellow”. This results may also observe from the AWS IoT Console</p><blockquote><p>Go to Things, and select your thing object, on the bottem of the target thing page, you can navigate to the <strong>Device Shadow</strong> tab, then select the <strong>Classic Shadow</strong>, then you can see the Device Shadow State below</p></blockquote><p><img src="https://i.imgur.com/KTfooA1.png" alt="Imgur"></p><p><img src="https://i.imgur.com/Xcu4BKk.png" alt="Imgur"></p><p>For testing, I enter “green” as the input of <code>shadow.py</code>.</p><p>And the state change show in both terminal and IoT Console</p><p><img src="https://i.imgur.com/AEEMMCa.png" alt="Imgur"></p><p><img src="https://i.imgur.com/BWi4UZh.png" alt="Imgur"></p><h2 id="Test-the-Shadow-Document"><a href="#Test-the-Shadow-Document" class="headerlink" title="Test the Shadow Document"></a>Test the Shadow Document</h2><p>Now you can try to edit the Shadow Document directly.</p><p>For example, I change the desired state from red to green.</p><p>Then you will notice that the change will reflect to the <strong>Delta report</strong>.</p><p><img src="https://i.imgur.com/9l40PXT.png" alt="Imgur"></p><h2 id="Test-with-AWS-IoT-Test-MQTT-Client"><a href="#Test-with-AWS-IoT-Test-MQTT-Client" class="headerlink" title="Test with AWS IoT Test MQTT Client"></a>Test with AWS IoT Test MQTT Client</h2><p>First, it is necessary to subscribe to the shadow topic in the MQTT client, for receiving the state change events.</p><p><img src="https://i.imgur.com/Zq4x4i8.png" alt="Imgur"></p><p>The client can subscribe to the topic</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$aws/things/ESP32/shadow/update/#</span><br></pre></td></tr></table></figure><p>The wildcard symbol <strong>“#”</strong> indicates that it wants to subscribe all topic under the <code>update/</code> prefix.</p><p>And you can re-run the program with new color value. You can find the MQTT client will receive the state change events.</p><p>At first, the color was “red”.</p><blockquote><p>The message published to $aws&#x2F;things&#x2F;ESP32&#x2F;shadow&#x2F;update&#x2F;document topic</p></blockquote><p>Then it changed to “green”.</p><blockquote><p> The message published to $aws&#x2F;things&#x2F;ESP32&#x2F;shadow&#x2F;update&#x2F;accepted topic<br>Noted that any unsuccessful messages were received on the topic $aws&#x2F;things&#x2F;ESP32&#x2F;shadow&#x2F;update&#x2F;rejected </p></blockquote><p><img src="https://i.imgur.com/brQ3knq.png" alt="Imgur"></p><h2 id="Edit-the-shadow-document-again"><a href="#Edit-the-shadow-document-again" class="headerlink" title="Edit the shadow document again"></a>Edit the shadow document again</h2><p>I change the desired stat value “blue” to “black”.</p><p><img src="https://i.imgur.com/DVKi6Xb.png" alt="Imgur"></p><p>The first received event will be on the delta topic, it means that there are differences between desired state and reported state.</p><p>At the same time, the message will published to the topic $aws&#x2F;things&#x2F;ESP32&#x2F;shadow&#x2F;update&#x2F;accepted for notifying the device to update the state</p><p><img src="https://i.imgur.com/7fewMie.png" alt="Imgur"></p><p>And also published to the shadow document topic for recording.</p><p><img src="https://i.imgur.com/FYULN43.png" alt="Imgur"></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;previous&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;desired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;reported&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;desired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1699430576</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;reported&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1699430576</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">20</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;state&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;desired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;black&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;reported&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blue&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;desired&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1699431256</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;reported&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1699431256</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">21</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1699431256</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>But the reported state is not “Black”.</p><p>you can see the event published to the accepted topic.</p><p><img src="https://i.imgur.com/pzVidVy.png" alt="Imgur"></p><p>Meanwhile, the message published to the document topic</p><p><img src="https://i.imgur.com/ZKmF0vG.png" alt="Imgur"></p><h2 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h2><p>You will found the state change from <strong>(Desired: “Blue”, Reported: “Blue”)</strong> to <strong>(Desired: “Black”, Reported: “Blue”)</strong> and the final state is <strong>(Desired: “Black”, Reported: “Black”)</strong>.</p><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p>[+] Create a virtual device with Amazon EC2 - <a href="https://docs.aws.amazon.com/iot/latest/developerguide/creating-a-virtual-thing.html">https://docs.aws.amazon.com/iot/latest/developerguide/creating-a-virtual-thing.html</a><br>[+] Tutorial: Provisioning your device in AWS IoT - <a href="https://docs.aws.amazon.com/iot/latest/developerguide/shadow-provision-cloud.html">https://docs.aws.amazon.com/iot/latest/developerguide/shadow-provision-cloud.html</a><br>[+] Tutorial: Installing the Device SDK and running the sample application for Device Shadows - <a href="https://docs.aws.amazon.com/iot/latest/developerguide/lightbulb-shadow-application.html">https://docs.aws.amazon.com/iot/latest/developerguide/lightbulb-shadow-application.html</a><br>[+] Tutorial: Interacting with Device Shadow using the sample app and the MQTT test client - <a href="https://docs.aws.amazon.com/iot/latest/developerguide/interact-lights-device-shadows.html">https://docs.aws.amazon.com/iot/latest/developerguide/interact-lights-device-shadows.html</a><br>[+] Reserved topics - Shadow topics - <a href="https://docs.aws.amazon.com/iot/latest/developerguide/reserved-topics.html#reserved-topics-shadow">https://docs.aws.amazon.com/iot/latest/developerguide/reserved-topics.html#reserved-topics-shadow</a></p>]]></content>
      
      
      <categories>
          
          <category> 實作紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS </tag>
            
            <tag> IoT Core </tag>
            
            <tag> IoT Shadow </tag>
            
            <tag> MQTT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hands-On Practice: Amazon SNS Fan out to Amazon SQS</title>
      <link href="/en/posts/efc78ef4.html"/>
      <url>/en/posts/efc78ef4.html</url>
      
        <content type="html"><![CDATA[<h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>Amazon SNS offen works well with Amazon SQS, by subscribing SQS to SNS, the SNS service can push messages to SQS. <strong>This may eliminating the need to periodically check or “poll” for updates.</strong></p><h3 id="What-is-Amazon-SQS"><a href="#What-is-Amazon-SQS" class="headerlink" title="What is Amazon SQS?"></a>What is Amazon SQS?</h3><p>By official definition</p><blockquote><p>Amazon SQS is a message queue service used by distributed applications to exchange messages through a polling model, and can be used to decouple sending and receiving components—without requiring each component to be concurrently available. </p></blockquote><h2 id="Scenario"><a href="#Scenario" class="headerlink" title="Scenario"></a>Scenario</h2><blockquote><p>The <strong>Fanout</strong> scenario is when a message published to an SNS topic is replicated and pushed to multiple endpoints, such as Kinesis Data Firehose delivery streams, Amazon SQS queues, HTTP(S) endpoints, and Lambda functions. This allows for parallel asynchronous processing.<br>For example, you can develop an application that publishes a message to an SNS topic whenever an order is placed for a product. Then, SQS queues that are subscribed to the SNS topic receive identical notifications for the new order. An Amazon Elastic Compute Cloud (Amazon EC2) server instance attached to one of the SQS queues can handle the processing or fulfillment of the order. And you can attach another Amazon EC2 server instance to a data warehouse for analysis of all orders received.[1]</p></blockquote><h2 id="Steps"><a href="#Steps" class="headerlink" title="Steps"></a>Steps</h2><p>Here we will go through each step of fan out to Amazon SQS.</p><p>The initial step is to remember both SNS arn and SQS arn.</p><h3 id="Create-SQS-Queue"><a href="#Create-SQS-Queue" class="headerlink" title="Create SQS Queue"></a>Create SQS Queue</h3><p>First, you’ll need to create a standard queue in SQS console</p><p><img src="https://i.imgur.com/RRffWm5.png" alt="Imgur"></p><p>After creating the standard queue, it will shows the arn.</p><p>Make sure noted this arn, you’ll need to provide this arn when creating the subscriptions</p><h3 id="Create-SNS-Topic"><a href="#Create-SNS-Topic" class="headerlink" title="Create SNS Topic"></a>Create SNS Topic</h3><p>Second, you need to create a SNS topic in the SNS console..</p><p><img src="https://i.imgur.com/ygA6g1P.png" alt="Imgur"></p><p>And again, you’ll need to note the topic arn.</p><h3 id="Provide-Permission-to-SNS-to-send-messages-to-SQS"><a href="#Provide-Permission-to-SNS-to-send-messages-to-SQS" class="headerlink" title="Provide Permission to SNS to send messages to SQS"></a>Provide Permission to SNS to send messages to SQS</h3><p>By default, SNS will not have permission to send messages to SQS, so you need to provide permission to SNS for sending messages.</p><ul><li>Go to SQS Console</li><li>Press “Edit” in the top corner</li><li>Scroll down to the “Access Policy”</li></ul><p><img src="https://i.imgur.com/keRSRlR.png" alt="Imgur"></p><ul><li>Append new statement in the Access Policy</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Principal&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sns.amazonaws.com&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;sqs:DeleteMessage&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;sqs:ReceiveMessage&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;sqs:SendMessage&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:sqs:us-east-1:xxxxxxxxxxxx:QueueforSNS&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Condition&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;ArnEquals&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;aws:SourceArn&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:sns:us-east-1:xxxxxxxxxxxx:StandardTopicforSQS&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/UWjKND7.png" alt="Imgur"></p><h3 id="Subscribe-SQS-queue-to-SNS-topic"><a href="#Subscribe-SQS-queue-to-SNS-topic" class="headerlink" title="Subscribe SQS queue to SNS topic"></a>Subscribe SQS queue to SNS topic</h3><p>Now you’ll need to subscribe the SQS queue to the SNS topic.</p><ul><li>Go to SNS console</li><li>Scroll down and choose “Create Subscription”</li></ul><p><img src="https://i.imgur.com/qTEPbQb.png" alt="Imgur"></p><ul><li>Choose your topic arn</li><li>Set the protocal to SQS</li><li>Choose the SQS arn</li></ul><p><img src="https://i.imgur.com/voJqHuB.png" alt="Imgur"></p><p>Once complete, you will notice that the subscripe confirmation also completes. If you create a SQS type subscription by using console, you don’t need confirm the subscription manually.</p><p><img src="https://i.imgur.com/Jr4Brob.png" alt="Imgur"></p><blockquote><p><strong>But if you create a cross-account subscription, you will receive the confirmation url in the SQS queue, and you will need to click the confirmation URL. [3]</strong></p></blockquote><h3 id="Provide-Permission-to-User-for-topic-x2F-queue-operations"><a href="#Provide-Permission-to-User-for-topic-x2F-queue-operations" class="headerlink" title="Provide Permission to User for topic&#x2F;queue operations"></a>Provide Permission to User for topic&#x2F;queue operations</h3><p>You can add permissions to an IAM User to publish SNS messages to a topic.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sns:Publish&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:sns:us-east-2:XXXXXXXXXXXX:MyTopic&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>And you also need to provide permissions to SQS queue to recieve and delete messages</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;sqs:ReceiveMessage&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;sqs:DeleteMessage&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;arn:aws:sqs:us-east-2:XXXXXXXXXXXX:MyQueue1&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;arn:aws:sqs:us-east-2:XXXXXXXXXXXX:MyQueue2&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>However,if you want to perform cross-account operations, you will need to provide permissions to the other account.</p><p>For example, if you want to let acount: 111122223333 to publish messages to SNS topic in your account, here is an example policy.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Principal&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;AWS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;111122223333&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sns:Publish&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="string">&quot;arn:aws:sns:us-east-2:XXXXXXXXXXXXX:MyTopic&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>if you want to let acount: 111122223333 to perform receive abd delete messages to queue in your account, here is an example policy.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Statement&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;Effect&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Allow&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Principal&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;AWS&quot;</span><span class="punctuation">:</span> <span class="string">&quot;111122223333&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Action&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;sqs:DeleteMessage&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;sqs:ReceiveMessage&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Resource&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;arn:aws:sqs:us-east-2:XXXXXXXXXXXX:MyQueue&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Test-subscription"><a href="#Test-subscription" class="headerlink" title="Test subscription"></a>Test subscription</h3><p>Now we can test the message delivery to the queue.</p><ul><li>Go to the SNS console</li><li>Press “Push Message” in the top right corner </li><li>Enter the message subject and meesage body</li></ul><p><img src="https://i.imgur.com/iu7VJVX.png" alt="Imgur"><br><img src="https://i.imgur.com/ppgfOf0.png" alt="Imgur"></p><ul><li>Go to the SQS console</li><li>Press “Send and Receive Message” in the top right corner</li><li>Scroll down , and press the “Poll for all messages”</li><li>And you’ll find the messages are in polling progress.</li></ul><p><img src="https://i.imgur.com/aYWXVIE.png" alt="Imgur"></p><ul><li>Then the test meesages showed in the console</li></ul><p><img src="https://i.imgur.com/Vj3cCc9.png" alt="Imgur"></p><h2 id="Conclusions"><a href="#Conclusions" class="headerlink" title="Conclusions"></a>Conclusions</h2><p>We successfully fan out the message from the Amazon SNS to the Amazon SQS. </p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://docs.aws.amazon.com/sns/latest/dg/sns-common-scenarios.html#SNSFanoutScenario">https://docs.aws.amazon.com/sns/latest/dg/sns-common-scenarios.html#SNSFanoutScenario</a><br>[2] <a href="https://docs.aws.amazon.com/zh_tw/sns/latest/dg/sns-sqs-as-subscriber.html">https://docs.aws.amazon.com/zh_tw/sns/latest/dg/sns-sqs-as-subscriber.html</a><br>[3]<a href="https://docs.aws.amazon.com/zh_tw/sns/latest/dg/sns-send-message-to-sqs-cross-account.html">https://docs.aws.amazon.com/zh_tw/sns/latest/dg/sns-send-message-to-sqs-cross-account.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 實作紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS </tag>
            
            <tag> SNS </tag>
            
            <tag> SQS </tag>
            
            <tag> Publish-Subscribe-Model </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hands-On Practice: S3 Gateway Endpoints</title>
      <link href="/en/posts/e7e295f6.html"/>
      <url>/en/posts/e7e295f6.html</url>
      
        <content type="html"><![CDATA[<h1 id="What-is-S3-Gateway-Endpoints"><a href="#What-is-S3-Gateway-Endpoints" class="headerlink" title="What is S3 Gateway Endpoints?"></a>What is S3 Gateway Endpoints?</h1><p><img src="https://i.imgur.com/MUsKNi4.png" alt="Imgur"></p><p>Let’s consider a scenario</p><blockquote><p>How could your Lambda function access the content in the S3 bucket?</p></blockquote><p>If you want a service to access the content in the S3 bucket, it usually go through VPC endpoint. S3 supports two types of VPC endpoint,each of which is <strong>Gateway endpoint</strong> and <strong>Interface endpoint</strong></p><!--如果要通過一個服務來存取 S3 當中的內容，通常是會通過 VPC Endpoint，而在 S3 當中又支援兩種不同的 VPC Endpoint類型，分別是 **Gateway Endpoint** 以及 **Interface Endpoint**--><p>The diffeences between two types of VPC endpoints are listed below</p><table><thead><tr><th>S3 Gateway Endpoints</th><th>S3 Interface Endpoints</th></tr></thead><tbody><tr><td>Use S3 Public IP Address</td><td>Use Private IP Address in VPC to access S3</td></tr><tr><td>Use the same S3 DNS Name</td><td>Name must include VPC Endpoint ID [3]</td></tr><tr><td>cannot access internally</td><td>can access internally</td></tr><tr><td>cannot access from other AWS region</td><td>can access from other AWS region by using VPC peering or AWS Transit gateway</td></tr><tr><td>Free</td><td>In chrarge</td></tr></tbody></table><!-- >> **所以當你的情境是你在同個 Region 底下有個 Lambda 函數想要存取 S3 的內容，那就很適合使用 Gateway Endpoint** --><blockquote><p>So if your scenario is that a Lambda function want to access the content in S3 bucket in the same region, it is great to utilize the Gateway Endpoint</p></blockquote><h2 id="Consideration-of-S3-Gateway-Endpoint"><a href="#Consideration-of-S3-Gateway-Endpoint" class="headerlink" title="Consideration of S3 Gateway Endpoint"></a>Consideration of S3 Gateway Endpoint</h2><p>It is worth to mestion that there are several things you need to consider before choosing S3 Gateway Endpoints, make sure you go through the section in the official documentation</p><blockquote><p><a href="https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-s3.html#gateway-endpoint-considerations-s3">https://docs.aws.amazon.com/vpc/latest/privatelink/vpc-endpoints-s3.html#gateway-endpoint-considerations-s3</a></p></blockquote><h2 id="Private-DNS"><a href="#Private-DNS" class="headerlink" title="Private DNS"></a>Private DNS</h2><p>When you are trying yo create Gateway Endpoint or Interface Endpoint for your S3, you can decide creating private DNS for cost down.</p><blockquote><p>This is implement by Route53 Resolver<br>For detail you can check：<a href="https://docs.aws.amazon.com/zh_tw/Route53/latest/DeveloperGuide/resolver.html">https://docs.aws.amazon.com/zh_tw/Route53/latest/DeveloperGuide/resolver.html</a></p></blockquote><h1 id="Steps-for-building-Gateway-Endpoint"><a href="#Steps-for-building-Gateway-Endpoint" class="headerlink" title="Steps for building Gateway Endpoint"></a><a href="https://docs.aws.amazon.com/zh_tw/vpc/latest/privatelink/vpc-endpoints-s3.html#create-gateway-endpoint-s3">Steps for building Gateway Endpoint</a></h1><ul><li>Go to AWS Console to create the endpoint</li></ul><blockquote><p>VPC &#x2F; Endpoints &#x2F; Create Endpoint</p></blockquote><p><img src="https://i.imgur.com/asOslk6.png" alt="Imgur"></p><ul><li>Choose <code>AWS services</code> , and <code>com.amaazonaws.us-east-1.s3</code></li></ul><p><img src="https://i.imgur.com/ujgXmUq.png" alt="Imgur"></p><ul><li>Then, press create endpoints</li></ul><h2 id="Associate-Route-Table"><a href="#Associate-Route-Table" class="headerlink" title="Associate Route Table"></a>Associate Route Table</h2><ul><li>Make sure the route table that assoicate to the gateway endpoint is clean.<blockquote><p>If you don’t have on, then make one.</p></blockquote></li></ul><p><img src="https://i.imgur.com/cI4mrOt.png" alt="Imgur"></p><h2 id="Configure-policy"><a href="#Configure-policy" class="headerlink" title="Configure policy"></a>Configure policy</h2><ul><li>For testing purposes, I choose <code>Full Access</code></li></ul><p><img src="https://i.imgur.com/kiQtSej.png" alt="Imgur"></p><ul><li>Then, press create endpoint</li></ul><h2 id="Check-the-routing"><a href="#Check-the-routing" class="headerlink" title="Check the routing"></a>Check the routing</h2><p>After establishing the endpoint, you can check if the default route of route table is well configured</p><p><img src="https://i.imgur.com/3Ajfl91.png" alt="Imgur"></p><p>Next, we must configure a Lambda function for accessing S3 bucket.</p><h2 id="Configure-Lambda-Function"><a href="#Configure-Lambda-Function" class="headerlink" title="Configure Lambda Function"></a>Configure Lambda Function</h2><p>If you put a Lambda funciton into a VPC, it will attach to 2 subnets by defaults.</p><p>Make sure two subnet have default route to S3 Gateway Endpoints.</p><p><img src="https://i.imgur.com/XmbfUKe.png" alt="Imgur"><br><img src="https://i.imgur.com/AP6fZGy.png" alt="Imgur"></p><ul><li>Create Lambda function, and enable the VPC</li></ul><p><img src="https://i.imgur.com/eBfWExA.png" alt="Imgur"></p><ul><li>Lambda Code</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> boto3</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">lambda_handler</span>(<span class="params">event, context</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;CREATE CLIENT&quot;</span>)</span><br><span class="line">    s3 = boto3.client(<span class="string">&quot;s3&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;START REQUEST&quot;</span>)</span><br><span class="line">    resp = s3.list_objects(Bucket=<span class="string">&quot;testbucket4-s3gateway-endpoint&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(resp)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="string">&#x27;statusCode&#x27;</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="string">&#x27;body&#x27;</span>: json.dumps(<span class="string">&#x27;Hello from Lambda!&#x27;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>In this Lambda code, Lambda will try to list the objects in the bucket, can print out the information of  response object in the log.</p><ul><li>Configure policy of Lambda execution role</li></ul><p>I simply attach AWS Managed Policy <code>AmazonS3FullAccess</code> to the execution role for testing</p><blockquote><p>Notice, you should not give full access to your Lambda function in production mode, make sure giving adequient permssion to the role.</p></blockquote><p><img src="https://i.imgur.com/U3mPX0h.png" alt="Imgur"></p><h2 id="Check-invocations"><a href="#Check-invocations" class="headerlink" title="Check invocations"></a>Check invocations</h2><ul><li>Press <code>test</code> button in the Lambda console, you’ll noticee the lambda get invoked successfully</li></ul><p><img src="https://i.imgur.com/WB3iyyD.png" alt="Imgur"></p><ul><li>Then you need to check the invocation logs in CloudWatch</li></ul><p><img src="https://i.imgur.com/j5q8yCp.png" alt="Imgur"></p><p>You can see that the object information were listed and printed out in the invocation logs.</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>[1] <a href="https://docs.aws.amazon.com/zh_tw/vpc/latest/privatelink/vpc-endpoints-s3.html#create-gateway-endpoint-s3">https://docs.aws.amazon.com/zh_tw/vpc/latest/privatelink/vpc-endpoints-s3.html#create-gateway-endpoint-s3</a><br>[2] <a href="https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/userguide/privatelink-interface-endpoints.html#types-of-vpc-endpoints-for-s3">https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/userguide/privatelink-interface-endpoints.html#types-of-vpc-endpoints-for-s3</a><br>[3] <a href="https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/userguide/privatelink-interface-endpoints.html#accessing-s3-interface-endpoints">https://docs.aws.amazon.com/zh_tw/AmazonS3/latest/userguide/privatelink-interface-endpoints.html#accessing-s3-interface-endpoints</a></p>]]></content>
      
      
      <categories>
          
          <category> 實作紀錄 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AWS </tag>
            
            <tag> S3 </tag>
            
            <tag> Endpoints </tag>
            
            <tag> Gateway </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
